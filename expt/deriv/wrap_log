Instructions for f2py wrapping of selected subroutins in oinfomodule.f.


* Edit _oinfo.f to define the basic interface with directives.


* Create an initial .pyf file:

make _obsinfo-raw.pyf


* Move it to obsinfomodule.pyf, which will be what is actually used:

mv _obsinfo-raw.pyf _oinfo.pyf

We do this so that "make <>.pyf" doesn't overwrite a hand-modified .pyf 
file.


* Edit the __user__routines modules at the top.  Since all routines
in this module use external functions with the same structure, we
can replace the two __user__routines with a single one:

python module obsinfo__user__routines 
    interface obsinfo_user_interface 
        function logf(n,x) result (r)
            integer optional,intent(in),check(len(x)>=n),depend(x) :: n=len(x)
            real*8 dimension(n),intent(in) :: x
            real*8 intent(out) :: r
        end function logf
    end interface obsinfo_user_interface
end python module obsinfo__user__routines


* Edit the "use" lines in the main module section:

            use obsinfo__user__routines, f=> logf
...
            use obsinfo__user__routines, lf=>logf


* Make the module:

make _obsinfo.so


* Check the signatures:

python signatures.py

